// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client';
import type { GetContent20Data, GetContent20Responses, GetContent20Errors, GetContentItemByPath20Data, GetContentItemByPath20Responses, GetContentItemByPath20Errors, GetContentItemById20Data, GetContentItemById20Responses, GetContentItemById20Errors, GetContentItems20Data, GetContentItems20Responses, GetContentItems20Errors, GetMedia20Data, GetMedia20Responses, GetMedia20Errors, GetMediaItemByPath20Data, GetMediaItemByPath20Responses, GetMediaItemByPath20Errors, GetMediaItemById20Data, GetMediaItemById20Responses, GetMediaItemById20Errors, GetMediaItems20Data, GetMediaItems20Responses } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export const getContent20 = <ThrowOnError extends boolean = false>(options?: Options<GetContent20Data, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetContent20Responses, GetContent20Errors, ThrowOnError>({
        url: '/umbraco/delivery/api/v2/content',
        ...options
    });
};

export const getContentItemByPath20 = <ThrowOnError extends boolean = false>(options: Options<GetContentItemByPath20Data, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetContentItemByPath20Responses, GetContentItemByPath20Errors, ThrowOnError>({
        url: '/umbraco/delivery/api/v2/content/item/{path}',
        ...options
    });
};

export const getContentItemById20 = <ThrowOnError extends boolean = false>(options: Options<GetContentItemById20Data, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetContentItemById20Responses, GetContentItemById20Errors, ThrowOnError>({
        url: '/umbraco/delivery/api/v2/content/item/{id}',
        ...options
    });
};

export const getContentItems20 = <ThrowOnError extends boolean = false>(options?: Options<GetContentItems20Data, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetContentItems20Responses, GetContentItems20Errors, ThrowOnError>({
        url: '/umbraco/delivery/api/v2/content/items',
        ...options
    });
};

export const getMedia20 = <ThrowOnError extends boolean = false>(options?: Options<GetMedia20Data, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetMedia20Responses, GetMedia20Errors, ThrowOnError>({
        url: '/umbraco/delivery/api/v2/media',
        ...options
    });
};

export const getMediaItemByPath20 = <ThrowOnError extends boolean = false>(options: Options<GetMediaItemByPath20Data, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetMediaItemByPath20Responses, GetMediaItemByPath20Errors, ThrowOnError>({
        url: '/umbraco/delivery/api/v2/media/item/{path}',
        ...options
    });
};

export const getMediaItemById20 = <ThrowOnError extends boolean = false>(options: Options<GetMediaItemById20Data, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetMediaItemById20Responses, GetMediaItemById20Errors, ThrowOnError>({
        url: '/umbraco/delivery/api/v2/media/item/{id}',
        ...options
    });
};

export const getMediaItems20 = <ThrowOnError extends boolean = false>(options?: Options<GetMediaItems20Data, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetMediaItems20Responses, unknown, ThrowOnError>({
        url: '/umbraco/delivery/api/v2/media/items',
        ...options
    });
};